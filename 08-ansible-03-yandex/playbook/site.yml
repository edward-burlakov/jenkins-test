---
- name: Install NGINX on hosts
  hosts: nginx
  handlers:
    - name: Start-nginx
      become: true
      ansible.builtin.command: systemctl start nginx.service
    - name: Reload-nginx
      become: true
      ansible.builtin.command: systemctl reload nginx.service
  tasks:
    - name: Export environment variables for NGINX
      become: true
      ansible.builtin.template:
        src: templates/nginx.sh.j2
        dest: /etc/profile.d/nginx.sh
        mode: 0644
      tags: nginx
    - name: NGINX / Add epel-release repository
      become: true
      ansible.builtin.yum:
        name: epel-release
        state: present
      tags: nginx
    - name: NGINX / Install NGINX
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present
      tags: nginx
      notify: Start-nginx
#    - name: Replace nginx.conf
#      become: true
#      ansible.builtin.template:
#        src: templates/nginx.conf
#        dest: /etc/nginx/nginx.conf
#        mode: 0644
#      notify: Reload-nginx
    - name: Insert Default Index Page
      ansible.builtin.template:
        src: /templates/index.html
        dest: "{{ nginx_web }}/index.html"
        mode: 0644
      tags: nginx
    - name: Add ufw rule
      become: true
      ansible.builtin.command: iptables allow 80,443/tcp
    - name: Start NGiNX
      ansible.builtin.service:
        name: nginx
        state: started
      tags: nginx
    - name: Create home catalog for www
      ansible.builtin.file:
        path: "{{ nginx_web }}/{{ virtual_domain }}"
        state: directory
        mode: 0644
      tags: nginx
    - name: Add virtual domain in NGINX for RPM
      ansible.builtin.template:
        src": templates/nginx_vhosts.conf
        dest: "{{ nginx_home }}/conf.d/{{ virtual_domain }}.conf"
        mode: 0644
      tags: nginx
      notify: Reload-nginx
##################################################################################################
- name: Install Clickhouse on hosts
  hosts: clickhouse
  handlers:
    - name: Start Clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
#    - name: Configure standart role Clickhouse
#      ansible.builtin.import_role:
#        name:  ansible-clickhouse   # Another variant of deploying Clickhouse role
    - name: Get clickhouse distrib
      ansible.builtin.get_url:
        url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
        dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
        mode: 0644
      with_items: "{{ clickhouse_packages }}"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start Clickhouse service
      register: clickhouse_installed
      until: clickhouse_installed is succeeded
      tags: clickhouse
    - name: Export environment variables for clickhouse
      become: true
      ansible.builtin.template:
        src: templates/clickhouse.sh.j2
        dest: /etc/profile.d/clickhouse.sh
        mode: 0644
      tags: clickhouse
    - name: Run clickhouse server
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
      retries: 3
      delay: 10
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create table if not exists logs (id int, name String) engine=Log;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0
#########################################################################################
- name: Install Vector on hosts
  hosts: vector
  become: true
  tasks:
    - name: Export environment variables for Vector
      become: true
      ansible.builtin.template:
        src: templates/vector.sh.j2
        dest: /etc/profile.d/vector.sh
        mode: 0644
      tags: vector
    - name: Get Vector installed version
      ansible.builtin.shell: "{{ vector_home }}/bin/vector --version"
      args:
        executable: /bin/bash
      register: vector_is_installed  # Запись результата в переменную
      ignore_unreachable: true
      ignore_errors: true
    - name: Ensure installation dir exists and create if it's not
      become: true
      ansible.builtin.file:
        state: directory
        path: "{{ vector_home }}/config"
        mode: 0644
    - name: Get archive of Vector from remote URL
      become: true
      ansible.builtin.get_url:
        url: "{{ vector_source }}"
        dest: "/tmp/vector.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      when: # Условия при котором будет выполняться загрузка дистрибутива
        - vector_is_installed is failed
      register: get_vector
      until: get_vector is succeeded
      tags: vector
    - name: Extract Vector in the installation directory
      become: true
      ansible.builtin.unarchive:
        remote_src: true
        src: "/tmp/vector.tar.gz"
        dest: "/tmp"
      register: extract_vector
      tags: vector
    - name: Copy distrib to working catalog
      ansible.builtin.copy:
        remote_src: true
        src: "/tmp/vector-x86_64-unknown-linux-musl/"
        dest: "{{ vector_home }}"
    - name: Copy configuration file  for Vector
      become: true
      ansible.builtin.copy:
        remote_src: false
        src: "templates/vector.toml"
        dest: "{{ vector_home }}/config/vector.toml"
        mode: 0644
      tags: vector
    - name: Copy scriptfile  for Vector
      become: true
      ansible.builtin.copy:
        remote_src: false
        src: "templates/vector.sh"
        dest: "{{ vector_home }}/bin/vector.sh"
        mode: 0750
      tags: vector
    - name: Execute Vector in the installation directory
      ansible.builtin.shell: "{{ vector_home }}/bin/vector.sh > /dev/null &"
      args:
        chdir: "{{ vector_home }}/bin"
        executable: /bin/bash  # Run vector in the Bash shell
#########################################################################################################
- name: Install lighthouse on hosts
  hosts: lighthouse
  tasks:
    - name: Set facts for NGINX vars
      ansible.builtin.set_fact:
        lighthouse_home: "{{ nginx_web }}/{{ virtual_domain }}"
      tags: nginx
    - name: Upload .tar.gz file containing binaries from local storage
      ansible.builtin.copy:
        src: "./files/lighthouse-master.tar.gz"
        dest: "/tmp/lighthouse-master.tar.gz"
        mode: 0644  ,
      register: download_lighthouse_binaries
      until: download_lighthouse_binaries is succeeded
      tags: lighthouse
    - name: Ensure installation dir exists
      become: true
      ansible.builtin.file:
        state: directory
        path: "{{ lighthouse_home }}"
        mode: 0644
      tags: lighthouse
    - name: Extract lighthouse in the installation directory
      become: true
      ansible.builtin.unarchive:
        remote_src: false
        src: "/tmp/lighthouse-master.tar.gz"
        dest: "{{ lighthouse_home }}"
        mode: 0644
      tags: lighthouse
    - name: Export environment variables
      become: true
      ansible.builtin.template:
        src: templates/lighthouse.sh.j2
        dest: /etc/profile.d/clickhouse.sh
        mode: 0644
      tags: lighthouse
# - name: Apply clickhouse role
#   hosts: clickhouse
#   roles:
#     - ansible-clickhouse
##################################################################################
